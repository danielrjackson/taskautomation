[project]
name = "taskautomation"
version = "0.1.0"
description = "Provides task automation tooling for other projects."
authors = [
  { name = "Daniel Jackson", email = "643707+danielrjackson@users.noreply.github.com" },
]
requires-python = "~=3.13"
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE.md" }
dependencies = [
  "pyyaml~=6.0.2", # YAML parser and emitter
  "types-PyYAML~=6.0.12", # Type stubs for PyYAML
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["/src/taskautomation"]

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.ruff]
line-length = 100
exclude = [".git", ".venv", ".pytest_cache", "__pycache__"]

[tool.ruff.lint]
extend-select = [
  "E",   # pycodestyle (style guide enforcement)
  "B",   # bugbear (unnecessary complexity)
  "I",   # isort (import sorting)
  "UP",  # pyupgrade (code modernizations)
  "C90", # mccabe (complexity)
  "D",   # pydocstyle (docstring conventions)
]
extend-ignore = [
  "D211", # no-blank-line-before-class
  "D212", # multi-line-summary-first-line
  "D413", # missing-blank-line-after-last-section
]
future-annotations = true
preview = true

[tool.uv]
package = false
dev-dependencies = [
  "coverage~=7.7.1",     # Test coverage report
  "hypothesis~=6.130.4", # Fuzzy testing
  "mypy~=1.17.0",        # Optional static type checker
  "pydantic~=2.9.0",     # Data validation and parsing
  "pytest~=7.4.4",       # Python testing library
  "pytest-cov~=6.2.1",   # Pytest coverage plugin
  "ruff~=0.12.6",        # Fast Python linter
]
